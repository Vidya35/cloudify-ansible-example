tosca_definitions_version: cloudify_dsl_1_2


imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m3/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.2/plugin.yaml
  - plugin.yaml
  
inputs:
  host_ip:
    default: localhost

  agent_user:
      description: >
        User name used when SSH-ing into the started machine

  agent_private_key_path:
      description: >
        Path to a private key that resided on the management machine.
        SSH-ing into agent machines will be done with this key.

node_types:
  helloWorld.nodes.supervisor:
    derived_from: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/install-ansible.sh
        configure:
          implementation: ansible.ansible_plugin.tasks.configure
          inputs:
             user:
                 default: 'vagrant'
             key:
                 default: {}
        start:
          implementation: ansible.ansible_plugin.tasks.ansible_playbook
          inputs:
             playbooks:
                 default: []
             inventory:
                 default: /etc/ansible/hosts 
        stop: {}
        delete: {}

node_templates:
  host:
    type: cloudify.nodes.Compute
    properties:
      ip: { get_input: host_ip }
      cloudify_agent:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path }

    interfaces:
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}

  supervisor:
    type: helloWorld.nodes.supervisor
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: ansible.ansible_plugin.tasks.configure
          inputs:
             user: { get_input: agent_user }
             key: { get_input: agent_private_key_path }
        start:
          implementation: ansible.ansible_plugin.tasks.ansible_playbook
          inputs:
             playbooks:
                 - resources/install.yml
             inventory:
                 - /home/vagrant/cloudify/blueprints/supervisor/resources/hosts
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

